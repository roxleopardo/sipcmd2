#!/usr/sbin/nft -f
# vim:set ts=4:
# You can find examples in /usr/share/nftables/.

# Clear all prior state
flush ruleset

# Basic IPv4/IPv6 stateful firewall for server/workstation.
table inet filter {
    chain input {
        type filter hook input priority 0; policy drop;

        iifname lo accept comment "Accept any localhost traffic"
        ct state { established, related } accept comment "Accept traffic originated from us"

        ip daddr 224.0.1.75 counter accept comment "Accept SIP Multicast"
        fib daddr type broadcast drop comment "Drop other broadcast"
        fib daddr type multicast drop comment "Drop other multicast"
        fib daddr type anycast drop comment "Drop other anycast"
        ip daddr 224.0.0.0/4 drop comment "Drop DVMRP"

        ct state invalid drop comment "Drop invalid connections"

        tcp dport 113 reject with icmpx type port-unreachable comment "Reject AUTH to make it fail fast"

        # 3CX PhoneSystem specific
        tcp dport { 80,443,5000,5001,5015,5060,5061,5090 } ct state new counter accept comment "Accept 3CX PhoneSystem TCP ports"
                udp dport { 69,5060,5090,7000-10999 } counter accept comment "Accept 3CX PhoneSystem UDP ports"

        # Other services specific
        udp dport { 137,138 } counter accept comment "Accept NetBIOS"
        tcp dport { 139,445 } counter accept comment "Accept TCP/IP MS Networking"

        # SSH Bruteforce blacklist
        tcp dport ssh ct state new limit rate 15/minute accept comment "Avoid brute force on SSH"

        # ICMPv4

        ip protocol icmp icmp type {
            echo-reply,  # type 0
            destination-unreachable,  # type 3
            time-exceeded,  # type 11
            parameter-problem,  # type 12
        } accept        comment "Accept ICMP"

        ip protocol icmp icmp type echo-request limit rate 1/second accept      comment "Accept max 1 ping per second"
    }

    chain forward {
        type filter hook forward priority 0; policy drop;
        counter jump DOCKER-USER
        counter jump DOCKER-ISOLATION-STAGE-1
        oifname "docker0" ct state established,related counter accept
        oifname "docker0" counter jump DOCKER
        iifname "docker0" oifname != "docker0" counter accept
        iifname "docker0" oifname "docker0" counter accept
    }

    chain output {
        type filter hook output priority 0; policy accept;
    }

    chain DOCKER {
    }

    chain DOCKER-ISOLATION-STAGE-1 {
        iifname "docker0" oifname != "docker0" counter jump DOCKER-ISOLATION-STAGE-2
        counter return
    }

    chain DOCKER-ISOLATION-STAGE-2 {
        oifname "docker0" counter drop
        counter return
    }

    chain DOCKER-USER {
        counter return
    }

}
table ip nat {
    chain PREROUTING {
        type nat hook prerouting priority -100; policy accept;
        fib daddr type local counter jump DOCKER
    }

    chain INPUT {
        type nat hook input priority 100; policy accept;
    }

    chain POSTROUTING {
        type nat hook postrouting priority 100; policy accept;
        oifname != "docker0" ip saddr 172.17.0.0/16 counter masquerade
    }

    chain OUTPUT {
        type nat hook output priority -100; policy accept;
        ip daddr != 127.0.0.0/8 fib daddr type local counter jump DOCKER
    }

    chain DOCKER {
        iifname "docker0" counter return
    }
}
